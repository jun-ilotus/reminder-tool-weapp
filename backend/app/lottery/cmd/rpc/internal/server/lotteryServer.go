// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.6
// Source: lottery.proto

package server

import (
	"context"

	"looklook/app/lottery/cmd/rpc/internal/logic"
	"looklook/app/lottery/cmd/rpc/internal/svc"
	"looklook/app/lottery/cmd/rpc/pb"
)

type LotteryServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedLotteryServer
}

func NewLotteryServer(svcCtx *svc.ServiceContext) *LotteryServer {
	return &LotteryServer{
		svcCtx: svcCtx,
	}
}

// -----------------------鎶藉琛?----------------------
func (s *LotteryServer) AddLottery(ctx context.Context, in *pb.AddLotteryReq) (*pb.AddLotteryResp, error) {
	l := logic.NewAddLotteryLogic(ctx, s.svcCtx)
	return l.AddLottery(in)
}

func (s *LotteryServer) UpdateLottery(ctx context.Context, in *pb.UpdateLotteryReq) (*pb.UpdateLotteryResp, error) {
	l := logic.NewUpdateLotteryLogic(ctx, s.svcCtx)
	return l.UpdateLottery(in)
}

func (s *LotteryServer) DelLottery(ctx context.Context, in *pb.DelLotteryReq) (*pb.DelLotteryResp, error) {
	l := logic.NewDelLotteryLogic(ctx, s.svcCtx)
	return l.DelLottery(in)
}

func (s *LotteryServer) GetLotteryById(ctx context.Context, in *pb.GetLotteryByIdReq) (*pb.GetLotteryByIdResp, error) {
	l := logic.NewGetLotteryByIdLogic(ctx, s.svcCtx)
	return l.GetLotteryById(in)
}

func (s *LotteryServer) SearchLottery(ctx context.Context, in *pb.SearchLotteryReq) (*pb.SearchLotteryResp, error) {
	l := logic.NewSearchLotteryLogic(ctx, s.svcCtx)
	return l.SearchLottery(in)
}

// -----------------------鍙備笌鎶藉-----------------------
func (s *LotteryServer) AddLotteryParticipation(ctx context.Context, in *pb.AddLotteryParticipationReq) (*pb.AddLotteryParticipationResp, error) {
	l := logic.NewAddLotteryParticipationLogic(ctx, s.svcCtx)
	return l.AddLotteryParticipation(in)
}

func (s *LotteryServer) UpdateLotteryParticipation(ctx context.Context, in *pb.UpdateLotteryParticipationReq) (*pb.UpdateLotteryParticipationResp, error) {
	l := logic.NewUpdateLotteryParticipationLogic(ctx, s.svcCtx)
	return l.UpdateLotteryParticipation(in)
}

func (s *LotteryServer) DelLotteryParticipation(ctx context.Context, in *pb.DelLotteryParticipationReq) (*pb.DelLotteryParticipationResp, error) {
	l := logic.NewDelLotteryParticipationLogic(ctx, s.svcCtx)
	return l.DelLotteryParticipation(in)
}

func (s *LotteryServer) GetLotteryParticipationById(ctx context.Context, in *pb.GetLotteryParticipationByIdReq) (*pb.GetLotteryParticipationByIdResp, error) {
	l := logic.NewGetLotteryParticipationByIdLogic(ctx, s.svcCtx)
	return l.GetLotteryParticipationById(in)
}

func (s *LotteryServer) SearchLotteryParticipation(ctx context.Context, in *pb.SearchLotteryParticipationReq) (*pb.SearchLotteryParticipationResp, error) {
	l := logic.NewSearchLotteryParticipationLogic(ctx, s.svcCtx)
	return l.SearchLotteryParticipation(in)
}

func (s *LotteryServer) SearchUserLotteryParticipation(ctx context.Context, in *pb.SearchUserLotteryParticipationReq) (*pb.SearchUserLotteryParticipationResp, error) {
	l := logic.NewSearchUserLotteryParticipationLogic(ctx, s.svcCtx)
	return l.SearchUserLotteryParticipation(in)
}

func (s *LotteryServer) SearchLotteryParticipationWin(ctx context.Context, in *pb.SearchLotteryParticipationWinReq) (*pb.SearchLotteryParticipationWinResp, error) {
	l := logic.NewSearchLotteryParticipationWinLogic(ctx, s.svcCtx)
	return l.SearchLotteryParticipationWin(in)
}

// -----------------------濂栧搧琛?----------------------
func (s *LotteryServer) AddPrize(ctx context.Context, in *pb.AddPrizeReq) (*pb.AddPrizeResp, error) {
	l := logic.NewAddPrizeLogic(ctx, s.svcCtx)
	return l.AddPrize(in)
}

func (s *LotteryServer) UpdatePrize(ctx context.Context, in *pb.UpdatePrizeReq) (*pb.UpdatePrizeResp, error) {
	l := logic.NewUpdatePrizeLogic(ctx, s.svcCtx)
	return l.UpdatePrize(in)
}

func (s *LotteryServer) DelPrize(ctx context.Context, in *pb.DelPrizeReq) (*pb.DelPrizeResp, error) {
	l := logic.NewDelPrizeLogic(ctx, s.svcCtx)
	return l.DelPrize(in)
}

func (s *LotteryServer) GetPrizeById(ctx context.Context, in *pb.GetPrizeByIdReq) (*pb.GetPrizeByIdResp, error) {
	l := logic.NewGetPrizeByIdLogic(ctx, s.svcCtx)
	return l.GetPrizeById(in)
}

func (s *LotteryServer) SearchPrize(ctx context.Context, in *pb.SearchPrizeReq) (*pb.SearchPrizeResp, error) {
	l := logic.NewSearchPrizeLogic(ctx, s.svcCtx)
	return l.SearchPrize(in)
}
