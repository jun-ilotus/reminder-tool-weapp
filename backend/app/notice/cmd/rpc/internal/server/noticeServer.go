// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.6
// Source: notice.proto

package server

import (
	"context"

	"looklook/app/notice/cmd/rpc/internal/logic"
	"looklook/app/notice/cmd/rpc/internal/svc"
	"looklook/app/notice/cmd/rpc/pb"
)

type NoticeServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedNoticeServer
}

func NewNoticeServer(svcCtx *svc.ServiceContext) *NoticeServer {
	return &NoticeServer{
		svcCtx: svcCtx,
	}
}

// -----------------------noticeLog-----------------------
func (s *NoticeServer) AddNoticeLog(ctx context.Context, in *pb.AddNoticeLogReq) (*pb.AddNoticeLogResp, error) {
	l := logic.NewAddNoticeLogLogic(ctx, s.svcCtx)
	return l.AddNoticeLog(in)
}

func (s *NoticeServer) UpdateNoticeLog(ctx context.Context, in *pb.UpdateNoticeLogReq) (*pb.UpdateNoticeLogResp, error) {
	l := logic.NewUpdateNoticeLogLogic(ctx, s.svcCtx)
	return l.UpdateNoticeLog(in)
}

func (s *NoticeServer) DelNoticeLog(ctx context.Context, in *pb.DelNoticeLogReq) (*pb.DelNoticeLogResp, error) {
	l := logic.NewDelNoticeLogLogic(ctx, s.svcCtx)
	return l.DelNoticeLog(in)
}

func (s *NoticeServer) GetNoticeLogById(ctx context.Context, in *pb.GetNoticeLogByIdReq) (*pb.GetNoticeLogByIdResp, error) {
	l := logic.NewGetNoticeLogByIdLogic(ctx, s.svcCtx)
	return l.GetNoticeLogById(in)
}

func (s *NoticeServer) SearchNoticeLog(ctx context.Context, in *pb.SearchNoticeLogReq) (*pb.SearchNoticeLogResp, error) {
	l := logic.NewSearchNoticeLogLogic(ctx, s.svcCtx)
	return l.SearchNoticeLog(in)
}
