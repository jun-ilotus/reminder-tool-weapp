// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	items "looklook/app/recode/cmd/api/internal/handler/items"
	recode "looklook/app/recode/cmd/api/internal/handler/recode"
	"looklook/app/recode/cmd/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				// items create
				Method:  http.MethodPost,
				Path:    "/items/create",
				Handler: items.CreateItemsHandler(serverCtx),
			},
			{
				// items delete
				Method:  http.MethodPost,
				Path:    "/items/delete",
				Handler: items.DeleteItemsHandler(serverCtx),
			},
			{
				// 通过id获取items
				Method:  http.MethodGet,
				Path:    "/items/itemsById",
				Handler: items.ItemsByIdHandler(serverCtx),
			},
			{
				// items list
				Method:  http.MethodGet,
				Path:    "/items/list",
				Handler: items.ItemsListHandler(serverCtx),
			},
			{
				// items modify
				Method:  http.MethodPost,
				Path:    "/items/modify",
				Handler: items.ModifyItemsHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
		rest.WithPrefix("/recode/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				// recode create
				Method:  http.MethodPost,
				Path:    "/recode/create",
				Handler: recode.CreateRecodeHandler(serverCtx),
			},
			{
				// recode delete
				Method:  http.MethodPost,
				Path:    "/recode/delete",
				Handler: recode.DeleteRecodeHandler(serverCtx),
			},
			{
				// recode list
				Method:  http.MethodGet,
				Path:    "/recode/list",
				Handler: recode.RecodeListHandler(serverCtx),
			},
			{
				// recode modify
				Method:  http.MethodPost,
				Path:    "/recode/modify",
				Handler: recode.ModifyRecodeHandler(serverCtx),
			},
			{
				// 通过id获取recode
				Method:  http.MethodGet,
				Path:    "/recode/recodeById",
				Handler: recode.RecodeByIdHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
		rest.WithPrefix("/recode/v1"),
	)
}
