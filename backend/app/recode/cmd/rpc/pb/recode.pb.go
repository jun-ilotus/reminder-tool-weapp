// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.0
// source: recode.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// --------------------------------items--------------------------------
type Items struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                 //id
	UserId        int64                  `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`         //鐢ㄦ埛id
	CreateTime    int64                  `protobuf:"varint,3,opt,name=createTime,proto3" json:"createTime,omitempty"` //createTime
	UpdateTime    int64                  `protobuf:"varint,4,opt,name=updateTime,proto3" json:"updateTime,omitempty"` //updateTime
	Content       string                 `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`        //浜嬮」鍚?
	Member        int64                  `protobuf:"varint,6,opt,name=member,proto3" json:"member,omitempty"`         //0鑷繁  1鍏辨湁
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Items) Reset() {
	*x = Items{}
	mi := &file_recode_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Items) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Items) ProtoMessage() {}

func (x *Items) ProtoReflect() protoreflect.Message {
	mi := &file_recode_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Items.ProtoReflect.Descriptor instead.
func (*Items) Descriptor() ([]byte, []int) {
	return file_recode_proto_rawDescGZIP(), []int{0}
}

func (x *Items) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Items) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Items) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *Items) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *Items) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Items) GetMember() int64 {
	if x != nil {
		return x.Member
	}
	return 0
}

type AddItemsReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`  //鐢ㄦ埛id
	Content       string                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"` //浜嬮」鍚?
	Member        int64                  `protobuf:"varint,3,opt,name=member,proto3" json:"member,omitempty"`  //0鑷繁  1鍏辨湁
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddItemsReq) Reset() {
	*x = AddItemsReq{}
	mi := &file_recode_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddItemsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddItemsReq) ProtoMessage() {}

func (x *AddItemsReq) ProtoReflect() protoreflect.Message {
	mi := &file_recode_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddItemsReq.ProtoReflect.Descriptor instead.
func (*AddItemsReq) Descriptor() ([]byte, []int) {
	return file_recode_proto_rawDescGZIP(), []int{1}
}

func (x *AddItemsReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AddItemsReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *AddItemsReq) GetMember() int64 {
	if x != nil {
		return x.Member
	}
	return 0
}

type AddItemsResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddItemsResp) Reset() {
	*x = AddItemsResp{}
	mi := &file_recode_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddItemsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddItemsResp) ProtoMessage() {}

func (x *AddItemsResp) ProtoReflect() protoreflect.Message {
	mi := &file_recode_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddItemsResp.ProtoReflect.Descriptor instead.
func (*AddItemsResp) Descriptor() ([]byte, []int) {
	return file_recode_proto_rawDescGZIP(), []int{2}
}

func (x *AddItemsResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UpdateItemsReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`          //id
	UserId        int64                  `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`  //鐢ㄦ埛id
	Content       string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"` //浜嬮」鍚?
	Member        int64                  `protobuf:"varint,4,opt,name=member,proto3" json:"member,omitempty"`  //0鑷繁  1鍏辨湁
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateItemsReq) Reset() {
	*x = UpdateItemsReq{}
	mi := &file_recode_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateItemsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateItemsReq) ProtoMessage() {}

func (x *UpdateItemsReq) ProtoReflect() protoreflect.Message {
	mi := &file_recode_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateItemsReq.ProtoReflect.Descriptor instead.
func (*UpdateItemsReq) Descriptor() ([]byte, []int) {
	return file_recode_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateItemsReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateItemsReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UpdateItemsReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *UpdateItemsReq) GetMember() int64 {
	if x != nil {
		return x.Member
	}
	return 0
}

type UpdateItemsResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateItemsResp) Reset() {
	*x = UpdateItemsResp{}
	mi := &file_recode_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateItemsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateItemsResp) ProtoMessage() {}

func (x *UpdateItemsResp) ProtoReflect() protoreflect.Message {
	mi := &file_recode_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateItemsResp.ProtoReflect.Descriptor instead.
func (*UpdateItemsResp) Descriptor() ([]byte, []int) {
	return file_recode_proto_rawDescGZIP(), []int{4}
}

type DelItemsReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
	UserId        int64                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DelItemsReq) Reset() {
	*x = DelItemsReq{}
	mi := &file_recode_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelItemsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelItemsReq) ProtoMessage() {}

func (x *DelItemsReq) ProtoReflect() protoreflect.Message {
	mi := &file_recode_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelItemsReq.ProtoReflect.Descriptor instead.
func (*DelItemsReq) Descriptor() ([]byte, []int) {
	return file_recode_proto_rawDescGZIP(), []int{5}
}

func (x *DelItemsReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DelItemsReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type DelItemsResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DelItemsResp) Reset() {
	*x = DelItemsResp{}
	mi := &file_recode_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelItemsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelItemsResp) ProtoMessage() {}

func (x *DelItemsResp) ProtoReflect() protoreflect.Message {
	mi := &file_recode_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelItemsResp.ProtoReflect.Descriptor instead.
func (*DelItemsResp) Descriptor() ([]byte, []int) {
	return file_recode_proto_rawDescGZIP(), []int{6}
}

type GetItemsByIdReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetItemsByIdReq) Reset() {
	*x = GetItemsByIdReq{}
	mi := &file_recode_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetItemsByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetItemsByIdReq) ProtoMessage() {}

func (x *GetItemsByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_recode_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetItemsByIdReq.ProtoReflect.Descriptor instead.
func (*GetItemsByIdReq) Descriptor() ([]byte, []int) {
	return file_recode_proto_rawDescGZIP(), []int{7}
}

func (x *GetItemsByIdReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetItemsByIdResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         *Items                 `protobuf:"bytes,1,opt,name=items,proto3" json:"items,omitempty"` //items
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetItemsByIdResp) Reset() {
	*x = GetItemsByIdResp{}
	mi := &file_recode_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetItemsByIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetItemsByIdResp) ProtoMessage() {}

func (x *GetItemsByIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_recode_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetItemsByIdResp.ProtoReflect.Descriptor instead.
func (*GetItemsByIdResp) Descriptor() ([]byte, []int) {
	return file_recode_proto_rawDescGZIP(), []int{8}
}

func (x *GetItemsByIdResp) GetItems() *Items {
	if x != nil {
		return x.Items
	}
	return nil
}

type SearchItemsReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          int64                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`             //page
	Limit         int64                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`           //limit
	Id            int64                  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`                 //id
	UserId        int64                  `protobuf:"varint,4,opt,name=userId,proto3" json:"userId,omitempty"`         //鐢ㄦ埛id
	CreateTime    int64                  `protobuf:"varint,5,opt,name=createTime,proto3" json:"createTime,omitempty"` //createTime
	UpdateTime    int64                  `protobuf:"varint,6,opt,name=updateTime,proto3" json:"updateTime,omitempty"` //updateTime
	Content       string                 `protobuf:"bytes,7,opt,name=content,proto3" json:"content,omitempty"`        //浜嬮」鍚?
	Member        int64                  `protobuf:"varint,8,opt,name=member,proto3" json:"member,omitempty"`         //0鑷繁  1鍏辨湁
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchItemsReq) Reset() {
	*x = SearchItemsReq{}
	mi := &file_recode_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchItemsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchItemsReq) ProtoMessage() {}

func (x *SearchItemsReq) ProtoReflect() protoreflect.Message {
	mi := &file_recode_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchItemsReq.ProtoReflect.Descriptor instead.
func (*SearchItemsReq) Descriptor() ([]byte, []int) {
	return file_recode_proto_rawDescGZIP(), []int{9}
}

func (x *SearchItemsReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchItemsReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchItemsReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SearchItemsReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SearchItemsReq) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *SearchItemsReq) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *SearchItemsReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *SearchItemsReq) GetMember() int64 {
	if x != nil {
		return x.Member
	}
	return 0
}

type SearchItemsResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*Items               `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"` //items
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchItemsResp) Reset() {
	*x = SearchItemsResp{}
	mi := &file_recode_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchItemsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchItemsResp) ProtoMessage() {}

func (x *SearchItemsResp) ProtoReflect() protoreflect.Message {
	mi := &file_recode_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchItemsResp.ProtoReflect.Descriptor instead.
func (*SearchItemsResp) Descriptor() ([]byte, []int) {
	return file_recode_proto_rawDescGZIP(), []int{10}
}

func (x *SearchItemsResp) GetItems() []*Items {
	if x != nil {
		return x.Items
	}
	return nil
}

// --------------------------------recode--------------------------------
type Recode struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                 //id
	UserId        int64                  `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`         //userId
	ItemsId       int64                  `protobuf:"varint,3,opt,name=itemsId,proto3" json:"itemsId,omitempty"`       //鍏宠仈鐨刬tems_id
	CreateTime    int64                  `protobuf:"varint,4,opt,name=createTime,proto3" json:"createTime,omitempty"` //createTime
	UpdateTime    int64                  `protobuf:"varint,5,opt,name=updateTime,proto3" json:"updateTime,omitempty"` //updateTime
	Content       string                 `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty"`        //澶囨敞
	RecodeTime    int64                  `protobuf:"varint,7,opt,name=recodeTime,proto3" json:"recodeTime,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Recode) Reset() {
	*x = Recode{}
	mi := &file_recode_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Recode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Recode) ProtoMessage() {}

func (x *Recode) ProtoReflect() protoreflect.Message {
	mi := &file_recode_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Recode.ProtoReflect.Descriptor instead.
func (*Recode) Descriptor() ([]byte, []int) {
	return file_recode_proto_rawDescGZIP(), []int{11}
}

func (x *Recode) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Recode) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Recode) GetItemsId() int64 {
	if x != nil {
		return x.ItemsId
	}
	return 0
}

func (x *Recode) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *Recode) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *Recode) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Recode) GetRecodeTime() int64 {
	if x != nil {
		return x.RecodeTime
	}
	return 0
}

type AddRecodeReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`   //userId
	ItemsId       int64                  `protobuf:"varint,2,opt,name=itemsId,proto3" json:"itemsId,omitempty"` //鍏宠仈鐨刬tems_id
	Content       string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`  //澶囨敞
	RecodeTime    int64                  `protobuf:"varint,4,opt,name=recodeTime,proto3" json:"recodeTime,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddRecodeReq) Reset() {
	*x = AddRecodeReq{}
	mi := &file_recode_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddRecodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRecodeReq) ProtoMessage() {}

func (x *AddRecodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_recode_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRecodeReq.ProtoReflect.Descriptor instead.
func (*AddRecodeReq) Descriptor() ([]byte, []int) {
	return file_recode_proto_rawDescGZIP(), []int{12}
}

func (x *AddRecodeReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AddRecodeReq) GetItemsId() int64 {
	if x != nil {
		return x.ItemsId
	}
	return 0
}

func (x *AddRecodeReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *AddRecodeReq) GetRecodeTime() int64 {
	if x != nil {
		return x.RecodeTime
	}
	return 0
}

type AddRecodeResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddRecodeResp) Reset() {
	*x = AddRecodeResp{}
	mi := &file_recode_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddRecodeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRecodeResp) ProtoMessage() {}

func (x *AddRecodeResp) ProtoReflect() protoreflect.Message {
	mi := &file_recode_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRecodeResp.ProtoReflect.Descriptor instead.
func (*AddRecodeResp) Descriptor() ([]byte, []int) {
	return file_recode_proto_rawDescGZIP(), []int{13}
}

func (x *AddRecodeResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UpdateRecodeReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`           //id
	UserId        int64                  `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`   //userId
	ItemsId       int64                  `protobuf:"varint,3,opt,name=itemsId,proto3" json:"itemsId,omitempty"` //鍏宠仈鐨刬tems_id
	Content       string                 `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`  //澶囨敞
	RecodeTime    int64                  `protobuf:"varint,7,opt,name=recodeTime,proto3" json:"recodeTime,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateRecodeReq) Reset() {
	*x = UpdateRecodeReq{}
	mi := &file_recode_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRecodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRecodeReq) ProtoMessage() {}

func (x *UpdateRecodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_recode_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRecodeReq.ProtoReflect.Descriptor instead.
func (*UpdateRecodeReq) Descriptor() ([]byte, []int) {
	return file_recode_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateRecodeReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateRecodeReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UpdateRecodeReq) GetItemsId() int64 {
	if x != nil {
		return x.ItemsId
	}
	return 0
}

func (x *UpdateRecodeReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *UpdateRecodeReq) GetRecodeTime() int64 {
	if x != nil {
		return x.RecodeTime
	}
	return 0
}

type UpdateRecodeResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateRecodeResp) Reset() {
	*x = UpdateRecodeResp{}
	mi := &file_recode_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRecodeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRecodeResp) ProtoMessage() {}

func (x *UpdateRecodeResp) ProtoReflect() protoreflect.Message {
	mi := &file_recode_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRecodeResp.ProtoReflect.Descriptor instead.
func (*UpdateRecodeResp) Descriptor() ([]byte, []int) {
	return file_recode_proto_rawDescGZIP(), []int{15}
}

type DelRecodeReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
	UserId        int64                  `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	IntimateId    int64                  `protobuf:"varint,3,opt,name=intimateId,proto3" json:"intimateId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DelRecodeReq) Reset() {
	*x = DelRecodeReq{}
	mi := &file_recode_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelRecodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelRecodeReq) ProtoMessage() {}

func (x *DelRecodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_recode_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelRecodeReq.ProtoReflect.Descriptor instead.
func (*DelRecodeReq) Descriptor() ([]byte, []int) {
	return file_recode_proto_rawDescGZIP(), []int{16}
}

func (x *DelRecodeReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DelRecodeReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *DelRecodeReq) GetIntimateId() int64 {
	if x != nil {
		return x.IntimateId
	}
	return 0
}

type DelRecodeResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DelRecodeResp) Reset() {
	*x = DelRecodeResp{}
	mi := &file_recode_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelRecodeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelRecodeResp) ProtoMessage() {}

func (x *DelRecodeResp) ProtoReflect() protoreflect.Message {
	mi := &file_recode_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelRecodeResp.ProtoReflect.Descriptor instead.
func (*DelRecodeResp) Descriptor() ([]byte, []int) {
	return file_recode_proto_rawDescGZIP(), []int{17}
}

type GetRecodeByIdReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRecodeByIdReq) Reset() {
	*x = GetRecodeByIdReq{}
	mi := &file_recode_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRecodeByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecodeByIdReq) ProtoMessage() {}

func (x *GetRecodeByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_recode_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecodeByIdReq.ProtoReflect.Descriptor instead.
func (*GetRecodeByIdReq) Descriptor() ([]byte, []int) {
	return file_recode_proto_rawDescGZIP(), []int{18}
}

func (x *GetRecodeByIdReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetRecodeByIdResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Recode        *Recode                `protobuf:"bytes,1,opt,name=recode,proto3" json:"recode,omitempty"` //recode
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRecodeByIdResp) Reset() {
	*x = GetRecodeByIdResp{}
	mi := &file_recode_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRecodeByIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecodeByIdResp) ProtoMessage() {}

func (x *GetRecodeByIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_recode_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecodeByIdResp.ProtoReflect.Descriptor instead.
func (*GetRecodeByIdResp) Descriptor() ([]byte, []int) {
	return file_recode_proto_rawDescGZIP(), []int{19}
}

func (x *GetRecodeByIdResp) GetRecode() *Recode {
	if x != nil {
		return x.Recode
	}
	return nil
}

type SearchRecodeReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          int64                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`             //page
	Limit         int64                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`           //limit
	Id            int64                  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`                 //id
	UserId        int64                  `protobuf:"varint,4,opt,name=userId,proto3" json:"userId,omitempty"`         //userId
	ItemsId       int64                  `protobuf:"varint,5,opt,name=itemsId,proto3" json:"itemsId,omitempty"`       //鍏宠仈鐨刬tems_id
	CreateTime    int64                  `protobuf:"varint,6,opt,name=createTime,proto3" json:"createTime,omitempty"` //createTime
	UpdateTime    int64                  `protobuf:"varint,7,opt,name=updateTime,proto3" json:"updateTime,omitempty"` //updateTime
	Content       string                 `protobuf:"bytes,8,opt,name=content,proto3" json:"content,omitempty"`        //澶囨敞
	RecodeTime    int64                  `protobuf:"varint,9,opt,name=recodeTime,proto3" json:"recodeTime,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchRecodeReq) Reset() {
	*x = SearchRecodeReq{}
	mi := &file_recode_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchRecodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRecodeReq) ProtoMessage() {}

func (x *SearchRecodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_recode_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRecodeReq.ProtoReflect.Descriptor instead.
func (*SearchRecodeReq) Descriptor() ([]byte, []int) {
	return file_recode_proto_rawDescGZIP(), []int{20}
}

func (x *SearchRecodeReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchRecodeReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchRecodeReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SearchRecodeReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SearchRecodeReq) GetItemsId() int64 {
	if x != nil {
		return x.ItemsId
	}
	return 0
}

func (x *SearchRecodeReq) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *SearchRecodeReq) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *SearchRecodeReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *SearchRecodeReq) GetRecodeTime() int64 {
	if x != nil {
		return x.RecodeTime
	}
	return 0
}

type SearchRecodeResp struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Recode          []*Recode              `protobuf:"bytes,1,rep,name=recode,proto3" json:"recode,omitempty"` //recode
	RecodeDayCount  int64                  `protobuf:"varint,2,opt,name=recodeDayCount,proto3" json:"recodeDayCount,omitempty"`
	RecodeDaySpaced float32                `protobuf:"fixed32,3,opt,name=recodeDaySpaced,proto3" json:"recodeDaySpaced,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *SearchRecodeResp) Reset() {
	*x = SearchRecodeResp{}
	mi := &file_recode_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchRecodeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRecodeResp) ProtoMessage() {}

func (x *SearchRecodeResp) ProtoReflect() protoreflect.Message {
	mi := &file_recode_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRecodeResp.ProtoReflect.Descriptor instead.
func (*SearchRecodeResp) Descriptor() ([]byte, []int) {
	return file_recode_proto_rawDescGZIP(), []int{21}
}

func (x *SearchRecodeResp) GetRecode() []*Recode {
	if x != nil {
		return x.Recode
	}
	return nil
}

func (x *SearchRecodeResp) GetRecodeDayCount() int64 {
	if x != nil {
		return x.RecodeDayCount
	}
	return 0
}

func (x *SearchRecodeResp) GetRecodeDaySpaced() float32 {
	if x != nil {
		return x.RecodeDaySpaced
	}
	return 0
}

var File_recode_proto protoreflect.FileDescriptor

var file_recode_proto_rawDesc = string([]byte{
	0x0a, 0x0c, 0x72, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02,
	0x70, 0x62, 0x22, 0xa1, 0x01, 0x0a, 0x05, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x57, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x22,
	0x1e, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x6a, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65,
	0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x11, 0x0a, 0x0f, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x36,
	0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x0e, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x21, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x33, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1f, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70,
	0x62, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xd4,
	0x01, 0x0a, 0x0e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65,
	0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x32, 0x0a, 0x0f, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x49,
	0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1f, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xc4, 0x01, 0x0a, 0x06, 0x52, 0x65,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0x7a, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x72, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x72, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x1f, 0x0a, 0x0d,
	0x41, 0x64, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x8d, 0x01,
	0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x72, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x12, 0x0a,
	0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x56, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x74,
	0x69, 0x6d, 0x61, 0x74, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x69,
	0x6e, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x49, 0x64, 0x22, 0x0f, 0x0a, 0x0d, 0x44, 0x65, 0x6c,
	0x52, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x22, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x37,
	0x0a, 0x11, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x06, 0x72, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x52,
	0x06, 0x72, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x22, 0xf7, 0x01, 0x0a, 0x0f, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x22, 0x88, 0x01, 0x0a, 0x10, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x63, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x06, 0x72, 0x65, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x63, 0x6f,
	0x64, 0x65, 0x52, 0x06, 0x72, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x65,
	0x63, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0e, 0x72, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x79, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x79, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0f, 0x72, 0x65, 0x63,
	0x6f, 0x64, 0x65, 0x44, 0x61, 0x79, 0x53, 0x70, 0x61, 0x63, 0x65, 0x64, 0x32, 0xa9, 0x04, 0x0a,
	0x06, 0x72, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x2d, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x12, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2d,
	0x0a, 0x08, 0x44, 0x65, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x0f, 0x2e, 0x70, 0x62, 0x2e,
	0x44, 0x65, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x70, 0x62,
	0x2e, 0x44, 0x65, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a,
	0x0c, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x42, 0x79, 0x49, 0x64, 0x12, 0x13, 0x2e,
	0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x42, 0x79, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x0b, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x70, 0x62,
	0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x30, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x2e,
	0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x11, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x39, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x30, 0x0a,
	0x09, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x2e, 0x70, 0x62, 0x2e,
	0x44, 0x65, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70,
	0x62, 0x2e, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x3c, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x79, 0x49, 0x64,
	0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x42,
	0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a,
	0x0c, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x13, 0x2e,
	0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65,
	0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_recode_proto_rawDescOnce sync.Once
	file_recode_proto_rawDescData []byte
)

func file_recode_proto_rawDescGZIP() []byte {
	file_recode_proto_rawDescOnce.Do(func() {
		file_recode_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_recode_proto_rawDesc), len(file_recode_proto_rawDesc)))
	})
	return file_recode_proto_rawDescData
}

var file_recode_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_recode_proto_goTypes = []any{
	(*Items)(nil),             // 0: pb.Items
	(*AddItemsReq)(nil),       // 1: pb.AddItemsReq
	(*AddItemsResp)(nil),      // 2: pb.AddItemsResp
	(*UpdateItemsReq)(nil),    // 3: pb.UpdateItemsReq
	(*UpdateItemsResp)(nil),   // 4: pb.UpdateItemsResp
	(*DelItemsReq)(nil),       // 5: pb.DelItemsReq
	(*DelItemsResp)(nil),      // 6: pb.DelItemsResp
	(*GetItemsByIdReq)(nil),   // 7: pb.GetItemsByIdReq
	(*GetItemsByIdResp)(nil),  // 8: pb.GetItemsByIdResp
	(*SearchItemsReq)(nil),    // 9: pb.SearchItemsReq
	(*SearchItemsResp)(nil),   // 10: pb.SearchItemsResp
	(*Recode)(nil),            // 11: pb.Recode
	(*AddRecodeReq)(nil),      // 12: pb.AddRecodeReq
	(*AddRecodeResp)(nil),     // 13: pb.AddRecodeResp
	(*UpdateRecodeReq)(nil),   // 14: pb.UpdateRecodeReq
	(*UpdateRecodeResp)(nil),  // 15: pb.UpdateRecodeResp
	(*DelRecodeReq)(nil),      // 16: pb.DelRecodeReq
	(*DelRecodeResp)(nil),     // 17: pb.DelRecodeResp
	(*GetRecodeByIdReq)(nil),  // 18: pb.GetRecodeByIdReq
	(*GetRecodeByIdResp)(nil), // 19: pb.GetRecodeByIdResp
	(*SearchRecodeReq)(nil),   // 20: pb.SearchRecodeReq
	(*SearchRecodeResp)(nil),  // 21: pb.SearchRecodeResp
}
var file_recode_proto_depIdxs = []int32{
	0,  // 0: pb.GetItemsByIdResp.items:type_name -> pb.Items
	0,  // 1: pb.SearchItemsResp.items:type_name -> pb.Items
	11, // 2: pb.GetRecodeByIdResp.recode:type_name -> pb.Recode
	11, // 3: pb.SearchRecodeResp.recode:type_name -> pb.Recode
	1,  // 4: pb.recode.AddItems:input_type -> pb.AddItemsReq
	3,  // 5: pb.recode.UpdateItems:input_type -> pb.UpdateItemsReq
	5,  // 6: pb.recode.DelItems:input_type -> pb.DelItemsReq
	7,  // 7: pb.recode.GetItemsById:input_type -> pb.GetItemsByIdReq
	9,  // 8: pb.recode.SearchItems:input_type -> pb.SearchItemsReq
	12, // 9: pb.recode.AddRecode:input_type -> pb.AddRecodeReq
	14, // 10: pb.recode.UpdateRecode:input_type -> pb.UpdateRecodeReq
	16, // 11: pb.recode.DelRecode:input_type -> pb.DelRecodeReq
	18, // 12: pb.recode.GetRecodeById:input_type -> pb.GetRecodeByIdReq
	20, // 13: pb.recode.SearchRecode:input_type -> pb.SearchRecodeReq
	2,  // 14: pb.recode.AddItems:output_type -> pb.AddItemsResp
	4,  // 15: pb.recode.UpdateItems:output_type -> pb.UpdateItemsResp
	6,  // 16: pb.recode.DelItems:output_type -> pb.DelItemsResp
	8,  // 17: pb.recode.GetItemsById:output_type -> pb.GetItemsByIdResp
	10, // 18: pb.recode.SearchItems:output_type -> pb.SearchItemsResp
	13, // 19: pb.recode.AddRecode:output_type -> pb.AddRecodeResp
	15, // 20: pb.recode.UpdateRecode:output_type -> pb.UpdateRecodeResp
	17, // 21: pb.recode.DelRecode:output_type -> pb.DelRecodeResp
	19, // 22: pb.recode.GetRecodeById:output_type -> pb.GetRecodeByIdResp
	21, // 23: pb.recode.SearchRecode:output_type -> pb.SearchRecodeResp
	14, // [14:24] is the sub-list for method output_type
	4,  // [4:14] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_recode_proto_init() }
func file_recode_proto_init() {
	if File_recode_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_recode_proto_rawDesc), len(file_recode_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_recode_proto_goTypes,
		DependencyIndexes: file_recode_proto_depIdxs,
		MessageInfos:      file_recode_proto_msgTypes,
	}.Build()
	File_recode_proto = out.File
	file_recode_proto_goTypes = nil
	file_recode_proto_depIdxs = nil
}
