// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.6
// Source: recode.proto

package server

import (
	"context"

	"looklook/app/recode/cmd/rpc/internal/logic"
	"looklook/app/recode/cmd/rpc/internal/svc"
	"looklook/app/recode/cmd/rpc/pb"
)

type RecodeServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedRecodeServer
}

func NewRecodeServer(svcCtx *svc.ServiceContext) *RecodeServer {
	return &RecodeServer{
		svcCtx: svcCtx,
	}
}

// -----------------------items-----------------------
func (s *RecodeServer) AddItems(ctx context.Context, in *pb.AddItemsReq) (*pb.AddItemsResp, error) {
	l := logic.NewAddItemsLogic(ctx, s.svcCtx)
	return l.AddItems(in)
}

func (s *RecodeServer) UpdateItems(ctx context.Context, in *pb.UpdateItemsReq) (*pb.UpdateItemsResp, error) {
	l := logic.NewUpdateItemsLogic(ctx, s.svcCtx)
	return l.UpdateItems(in)
}

func (s *RecodeServer) DelItems(ctx context.Context, in *pb.DelItemsReq) (*pb.DelItemsResp, error) {
	l := logic.NewDelItemsLogic(ctx, s.svcCtx)
	return l.DelItems(in)
}

func (s *RecodeServer) GetItemsById(ctx context.Context, in *pb.GetItemsByIdReq) (*pb.GetItemsByIdResp, error) {
	l := logic.NewGetItemsByIdLogic(ctx, s.svcCtx)
	return l.GetItemsById(in)
}

func (s *RecodeServer) SearchItems(ctx context.Context, in *pb.SearchItemsReq) (*pb.SearchItemsResp, error) {
	l := logic.NewSearchItemsLogic(ctx, s.svcCtx)
	return l.SearchItems(in)
}

// -----------------------recode-----------------------
func (s *RecodeServer) AddRecode(ctx context.Context, in *pb.AddRecodeReq) (*pb.AddRecodeResp, error) {
	l := logic.NewAddRecodeLogic(ctx, s.svcCtx)
	return l.AddRecode(in)
}

func (s *RecodeServer) UpdateRecode(ctx context.Context, in *pb.UpdateRecodeReq) (*pb.UpdateRecodeResp, error) {
	l := logic.NewUpdateRecodeLogic(ctx, s.svcCtx)
	return l.UpdateRecode(in)
}

func (s *RecodeServer) DelRecode(ctx context.Context, in *pb.DelRecodeReq) (*pb.DelRecodeResp, error) {
	l := logic.NewDelRecodeLogic(ctx, s.svcCtx)
	return l.DelRecode(in)
}

func (s *RecodeServer) GetRecodeById(ctx context.Context, in *pb.GetRecodeByIdReq) (*pb.GetRecodeByIdResp, error) {
	l := logic.NewGetRecodeByIdLogic(ctx, s.svcCtx)
	return l.GetRecodeById(in)
}

func (s *RecodeServer) SearchRecode(ctx context.Context, in *pb.SearchRecodeReq) (*pb.SearchRecodeResp, error) {
	l := logic.NewSearchRecodeLogic(ctx, s.svcCtx)
	return l.SearchRecode(in)
}
