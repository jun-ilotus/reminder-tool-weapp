// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.0
// source: signin.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// --------------------------------recode--------------------------------
type Recode struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                 //绛惧埌璁板綍涓婚敭id
	UserId        int64                  `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`         //鐢ㄦ埛id
	CreateTime    int64                  `protobuf:"varint,3,opt,name=createTime,proto3" json:"createTime,omitempty"` //createTime
	SignDate      int64                  `protobuf:"varint,4,opt,name=signDate,proto3" json:"signDate,omitempty"`     //鎵撳崱鏃ユ湡
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Recode) Reset() {
	*x = Recode{}
	mi := &file_signin_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Recode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Recode) ProtoMessage() {}

func (x *Recode) ProtoReflect() protoreflect.Message {
	mi := &file_signin_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Recode.ProtoReflect.Descriptor instead.
func (*Recode) Descriptor() ([]byte, []int) {
	return file_signin_proto_rawDescGZIP(), []int{0}
}

func (x *Recode) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Recode) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Recode) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *Recode) GetSignDate() int64 {
	if x != nil {
		return x.SignDate
	}
	return 0
}

type AddRecodeReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`     //鐢ㄦ埛id
	SignDate      int64                  `protobuf:"varint,2,opt,name=signDate,proto3" json:"signDate,omitempty"` //鎵撳崱鏃ユ湡
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddRecodeReq) Reset() {
	*x = AddRecodeReq{}
	mi := &file_signin_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddRecodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRecodeReq) ProtoMessage() {}

func (x *AddRecodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_signin_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRecodeReq.ProtoReflect.Descriptor instead.
func (*AddRecodeReq) Descriptor() ([]byte, []int) {
	return file_signin_proto_rawDescGZIP(), []int{1}
}

func (x *AddRecodeReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AddRecodeReq) GetSignDate() int64 {
	if x != nil {
		return x.SignDate
	}
	return 0
}

type AddRecodeResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Task          []*Task                `protobuf:"bytes,2,rep,name=task,proto3" json:"task,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddRecodeResp) Reset() {
	*x = AddRecodeResp{}
	mi := &file_signin_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddRecodeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRecodeResp) ProtoMessage() {}

func (x *AddRecodeResp) ProtoReflect() protoreflect.Message {
	mi := &file_signin_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRecodeResp.ProtoReflect.Descriptor instead.
func (*AddRecodeResp) Descriptor() ([]byte, []int) {
	return file_signin_proto_rawDescGZIP(), []int{2}
}

func (x *AddRecodeResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AddRecodeResp) GetTask() []*Task {
	if x != nil {
		return x.Task
	}
	return nil
}

type UpdateRecodeReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`             //绛惧埌璁板綍涓婚敭id
	UserId        int64                  `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`     //鐢ㄦ埛id
	SignDate      int64                  `protobuf:"varint,3,opt,name=signDate,proto3" json:"signDate,omitempty"` //鎵撳崱鏃ユ湡
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateRecodeReq) Reset() {
	*x = UpdateRecodeReq{}
	mi := &file_signin_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRecodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRecodeReq) ProtoMessage() {}

func (x *UpdateRecodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_signin_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRecodeReq.ProtoReflect.Descriptor instead.
func (*UpdateRecodeReq) Descriptor() ([]byte, []int) {
	return file_signin_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateRecodeReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateRecodeReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UpdateRecodeReq) GetSignDate() int64 {
	if x != nil {
		return x.SignDate
	}
	return 0
}

type UpdateRecodeResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateRecodeResp) Reset() {
	*x = UpdateRecodeResp{}
	mi := &file_signin_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRecodeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRecodeResp) ProtoMessage() {}

func (x *UpdateRecodeResp) ProtoReflect() protoreflect.Message {
	mi := &file_signin_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRecodeResp.ProtoReflect.Descriptor instead.
func (*UpdateRecodeResp) Descriptor() ([]byte, []int) {
	return file_signin_proto_rawDescGZIP(), []int{4}
}

type DelRecodeReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DelRecodeReq) Reset() {
	*x = DelRecodeReq{}
	mi := &file_signin_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelRecodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelRecodeReq) ProtoMessage() {}

func (x *DelRecodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_signin_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelRecodeReq.ProtoReflect.Descriptor instead.
func (*DelRecodeReq) Descriptor() ([]byte, []int) {
	return file_signin_proto_rawDescGZIP(), []int{5}
}

func (x *DelRecodeReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DelRecodeResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DelRecodeResp) Reset() {
	*x = DelRecodeResp{}
	mi := &file_signin_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelRecodeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelRecodeResp) ProtoMessage() {}

func (x *DelRecodeResp) ProtoReflect() protoreflect.Message {
	mi := &file_signin_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelRecodeResp.ProtoReflect.Descriptor instead.
func (*DelRecodeResp) Descriptor() ([]byte, []int) {
	return file_signin_proto_rawDescGZIP(), []int{6}
}

type GetRecodeByIdReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRecodeByIdReq) Reset() {
	*x = GetRecodeByIdReq{}
	mi := &file_signin_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRecodeByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecodeByIdReq) ProtoMessage() {}

func (x *GetRecodeByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_signin_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecodeByIdReq.ProtoReflect.Descriptor instead.
func (*GetRecodeByIdReq) Descriptor() ([]byte, []int) {
	return file_signin_proto_rawDescGZIP(), []int{7}
}

func (x *GetRecodeByIdReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetRecodeByIdResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Recode        *Recode                `protobuf:"bytes,1,opt,name=recode,proto3" json:"recode,omitempty"` //recode
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRecodeByIdResp) Reset() {
	*x = GetRecodeByIdResp{}
	mi := &file_signin_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRecodeByIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecodeByIdResp) ProtoMessage() {}

func (x *GetRecodeByIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_signin_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecodeByIdResp.ProtoReflect.Descriptor instead.
func (*GetRecodeByIdResp) Descriptor() ([]byte, []int) {
	return file_signin_proto_rawDescGZIP(), []int{8}
}

func (x *GetRecodeByIdResp) GetRecode() *Recode {
	if x != nil {
		return x.Recode
	}
	return nil
}

type SearchRecodeReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          int64                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`             //page
	Limit         int64                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`           //limit
	Id            int64                  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`                 //绛惧埌璁板綍涓婚敭id
	UserId        int64                  `protobuf:"varint,4,opt,name=userId,proto3" json:"userId,omitempty"`         //鐢ㄦ埛id
	CreateTime    int64                  `protobuf:"varint,5,opt,name=createTime,proto3" json:"createTime,omitempty"` //createTime
	SignDate      int64                  `protobuf:"varint,6,opt,name=signDate,proto3" json:"signDate,omitempty"`     //鎵撳崱鏃ユ湡
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchRecodeReq) Reset() {
	*x = SearchRecodeReq{}
	mi := &file_signin_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchRecodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRecodeReq) ProtoMessage() {}

func (x *SearchRecodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_signin_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRecodeReq.ProtoReflect.Descriptor instead.
func (*SearchRecodeReq) Descriptor() ([]byte, []int) {
	return file_signin_proto_rawDescGZIP(), []int{9}
}

func (x *SearchRecodeReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchRecodeReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchRecodeReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SearchRecodeReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SearchRecodeReq) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *SearchRecodeReq) GetSignDate() int64 {
	if x != nil {
		return x.SignDate
	}
	return 0
}

type SearchRecodeResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Recode        []*Recode              `protobuf:"bytes,1,rep,name=recode,proto3" json:"recode,omitempty"` //recode
	Days          int64                  `protobuf:"varint,2,opt,name=days,proto3" json:"days,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchRecodeResp) Reset() {
	*x = SearchRecodeResp{}
	mi := &file_signin_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchRecodeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRecodeResp) ProtoMessage() {}

func (x *SearchRecodeResp) ProtoReflect() protoreflect.Message {
	mi := &file_signin_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRecodeResp.ProtoReflect.Descriptor instead.
func (*SearchRecodeResp) Descriptor() ([]byte, []int) {
	return file_signin_proto_rawDescGZIP(), []int{10}
}

func (x *SearchRecodeResp) GetRecode() []*Recode {
	if x != nil {
		return x.Recode
	}
	return nil
}

func (x *SearchRecodeResp) GetDays() int64 {
	if x != nil {
		return x.Days
	}
	return 0
}

// --------------------------------task--------------------------------
type Task struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                 //id
	CreateTime    int64                  `protobuf:"varint,2,opt,name=createTime,proto3" json:"createTime,omitempty"` //createTime
	UpdateTime    int64                  `protobuf:"varint,3,opt,name=updateTime,proto3" json:"updateTime,omitempty"` //updateTime
	Title         string                 `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`            //浠诲姟鏍囬
	Type          int64                  `protobuf:"varint,5,opt,name=type,proto3" json:"type,omitempty"`             //浠诲姟绫诲瀷锛?杩炵画绛惧埌
	Value         int64                  `protobuf:"varint,6,opt,name=value,proto3" json:"value,omitempty"`           //浠诲姟鍊硷紝渚濇嵁type鏉ョ‘瀹氾細涓?鏃舵槸杩炵画澶╂暟
	Content       string                 `protobuf:"bytes,7,opt,name=content,proto3" json:"content,omitempty"`        //澶囨敞
	Points        int64                  `protobuf:"varint,8,opt,name=points,proto3" json:"points,omitempty"`         //鑾峰緱鐨勭Н鍒嗗€?
	IsFinished    int64                  `protobuf:"varint,9,opt,name=isFinished,proto3" json:"isFinished,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task) Reset() {
	*x = Task{}
	mi := &file_signin_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_signin_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_signin_proto_rawDescGZIP(), []int{11}
}

func (x *Task) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Task) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *Task) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *Task) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Task) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Task) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *Task) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Task) GetPoints() int64 {
	if x != nil {
		return x.Points
	}
	return 0
}

func (x *Task) GetIsFinished() int64 {
	if x != nil {
		return x.IsFinished
	}
	return 0
}

type AddTaskReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`     //浠诲姟鏍囬
	Type          int64                  `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`      //浠诲姟绫诲瀷锛?杩炵画绛惧埌
	Value         int64                  `protobuf:"varint,3,opt,name=value,proto3" json:"value,omitempty"`    //浠诲姟鍊硷紝渚濇嵁type鏉ョ‘瀹氾細涓?鏃舵槸杩炵画澶╂暟
	Content       string                 `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"` //澶囨敞
	Points        int64                  `protobuf:"varint,5,opt,name=points,proto3" json:"points,omitempty"`  //鑾峰緱鐨勭Н鍒嗗€?
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddTaskReq) Reset() {
	*x = AddTaskReq{}
	mi := &file_signin_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddTaskReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTaskReq) ProtoMessage() {}

func (x *AddTaskReq) ProtoReflect() protoreflect.Message {
	mi := &file_signin_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTaskReq.ProtoReflect.Descriptor instead.
func (*AddTaskReq) Descriptor() ([]byte, []int) {
	return file_signin_proto_rawDescGZIP(), []int{12}
}

func (x *AddTaskReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AddTaskReq) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *AddTaskReq) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *AddTaskReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *AddTaskReq) GetPoints() int64 {
	if x != nil {
		return x.Points
	}
	return 0
}

type AddTaskResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddTaskResp) Reset() {
	*x = AddTaskResp{}
	mi := &file_signin_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddTaskResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTaskResp) ProtoMessage() {}

func (x *AddTaskResp) ProtoReflect() protoreflect.Message {
	mi := &file_signin_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTaskResp.ProtoReflect.Descriptor instead.
func (*AddTaskResp) Descriptor() ([]byte, []int) {
	return file_signin_proto_rawDescGZIP(), []int{13}
}

type UpdateTaskReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`          //id
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`     //浠诲姟鏍囬
	Type          int64                  `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`      //浠诲姟绫诲瀷锛?杩炵画绛惧埌
	Value         int64                  `protobuf:"varint,4,opt,name=value,proto3" json:"value,omitempty"`    //浠诲姟鍊硷紝渚濇嵁type鏉ョ‘瀹氾細涓?鏃舵槸杩炵画澶╂暟
	Content       string                 `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"` //澶囨敞
	Points        int64                  `protobuf:"varint,6,opt,name=points,proto3" json:"points,omitempty"`  //鑾峰緱鐨勭Н鍒嗗€?
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTaskReq) Reset() {
	*x = UpdateTaskReq{}
	mi := &file_signin_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTaskReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTaskReq) ProtoMessage() {}

func (x *UpdateTaskReq) ProtoReflect() protoreflect.Message {
	mi := &file_signin_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTaskReq.ProtoReflect.Descriptor instead.
func (*UpdateTaskReq) Descriptor() ([]byte, []int) {
	return file_signin_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateTaskReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateTaskReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateTaskReq) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *UpdateTaskReq) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *UpdateTaskReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *UpdateTaskReq) GetPoints() int64 {
	if x != nil {
		return x.Points
	}
	return 0
}

type UpdateTaskResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTaskResp) Reset() {
	*x = UpdateTaskResp{}
	mi := &file_signin_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTaskResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTaskResp) ProtoMessage() {}

func (x *UpdateTaskResp) ProtoReflect() protoreflect.Message {
	mi := &file_signin_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTaskResp.ProtoReflect.Descriptor instead.
func (*UpdateTaskResp) Descriptor() ([]byte, []int) {
	return file_signin_proto_rawDescGZIP(), []int{15}
}

type DelTaskReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DelTaskReq) Reset() {
	*x = DelTaskReq{}
	mi := &file_signin_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelTaskReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelTaskReq) ProtoMessage() {}

func (x *DelTaskReq) ProtoReflect() protoreflect.Message {
	mi := &file_signin_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelTaskReq.ProtoReflect.Descriptor instead.
func (*DelTaskReq) Descriptor() ([]byte, []int) {
	return file_signin_proto_rawDescGZIP(), []int{16}
}

func (x *DelTaskReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DelTaskResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DelTaskResp) Reset() {
	*x = DelTaskResp{}
	mi := &file_signin_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelTaskResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelTaskResp) ProtoMessage() {}

func (x *DelTaskResp) ProtoReflect() protoreflect.Message {
	mi := &file_signin_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelTaskResp.ProtoReflect.Descriptor instead.
func (*DelTaskResp) Descriptor() ([]byte, []int) {
	return file_signin_proto_rawDescGZIP(), []int{17}
}

type GetTaskByIdReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTaskByIdReq) Reset() {
	*x = GetTaskByIdReq{}
	mi := &file_signin_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTaskByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskByIdReq) ProtoMessage() {}

func (x *GetTaskByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_signin_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskByIdReq.ProtoReflect.Descriptor instead.
func (*GetTaskByIdReq) Descriptor() ([]byte, []int) {
	return file_signin_proto_rawDescGZIP(), []int{18}
}

func (x *GetTaskByIdReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetTaskByIdResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Task          *Task                  `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"` //task
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTaskByIdResp) Reset() {
	*x = GetTaskByIdResp{}
	mi := &file_signin_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTaskByIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskByIdResp) ProtoMessage() {}

func (x *GetTaskByIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_signin_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskByIdResp.ProtoReflect.Descriptor instead.
func (*GetTaskByIdResp) Descriptor() ([]byte, []int) {
	return file_signin_proto_rawDescGZIP(), []int{19}
}

func (x *GetTaskByIdResp) GetTask() *Task {
	if x != nil {
		return x.Task
	}
	return nil
}

type SearchTaskReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          int64                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`             //page
	Limit         int64                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`           //limit
	Id            int64                  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`                 //id
	CreateTime    int64                  `protobuf:"varint,4,opt,name=createTime,proto3" json:"createTime,omitempty"` //createTime
	UpdateTime    int64                  `protobuf:"varint,5,opt,name=updateTime,proto3" json:"updateTime,omitempty"` //updateTime
	Title         string                 `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty"`            //浠诲姟鏍囬
	Type          int64                  `protobuf:"varint,7,opt,name=type,proto3" json:"type,omitempty"`             //浠诲姟绫诲瀷锛?杩炵画绛惧埌
	Value         int64                  `protobuf:"varint,8,opt,name=value,proto3" json:"value,omitempty"`           //浠诲姟鍊硷紝渚濇嵁type鏉ョ‘瀹氾細涓?鏃舵槸杩炵画澶╂暟
	Content       string                 `protobuf:"bytes,9,opt,name=content,proto3" json:"content,omitempty"`        //澶囨敞
	Points        int64                  `protobuf:"varint,10,opt,name=points,proto3" json:"points,omitempty"`        //鑾峰緱鐨勭Н鍒嗗€?
	UserId        int64                  `protobuf:"varint,11,opt,name=userId,proto3" json:"userId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchTaskReq) Reset() {
	*x = SearchTaskReq{}
	mi := &file_signin_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchTaskReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchTaskReq) ProtoMessage() {}

func (x *SearchTaskReq) ProtoReflect() protoreflect.Message {
	mi := &file_signin_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchTaskReq.ProtoReflect.Descriptor instead.
func (*SearchTaskReq) Descriptor() ([]byte, []int) {
	return file_signin_proto_rawDescGZIP(), []int{20}
}

func (x *SearchTaskReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchTaskReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchTaskReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SearchTaskReq) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *SearchTaskReq) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *SearchTaskReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SearchTaskReq) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *SearchTaskReq) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *SearchTaskReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *SearchTaskReq) GetPoints() int64 {
	if x != nil {
		return x.Points
	}
	return 0
}

func (x *SearchTaskReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type SearchTaskResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Task          []*Task                `protobuf:"bytes,1,rep,name=task,proto3" json:"task,omitempty"` //task
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchTaskResp) Reset() {
	*x = SearchTaskResp{}
	mi := &file_signin_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchTaskResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchTaskResp) ProtoMessage() {}

func (x *SearchTaskResp) ProtoReflect() protoreflect.Message {
	mi := &file_signin_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchTaskResp.ProtoReflect.Descriptor instead.
func (*SearchTaskResp) Descriptor() ([]byte, []int) {
	return file_signin_proto_rawDescGZIP(), []int{21}
}

func (x *SearchTaskResp) GetTask() []*Task {
	if x != nil {
		return x.Task
	}
	return nil
}

// --------------------------------taskFinish--------------------------------
type TaskFinish struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                 //id
	TaskId        int64                  `protobuf:"varint,2,opt,name=taskId,proto3" json:"taskId,omitempty"`         //浠诲姟id
	UserId        int64                  `protobuf:"varint,3,opt,name=userId,proto3" json:"userId,omitempty"`         //userId
	CreateTime    int64                  `protobuf:"varint,4,opt,name=createTime,proto3" json:"createTime,omitempty"` //createTime
	FinishDate    int64                  `protobuf:"varint,5,opt,name=finishDate,proto3" json:"finishDate,omitempty"` //瀹屾垚鏃ユ湡
	Points        int64                  `protobuf:"varint,6,opt,name=points,proto3" json:"points,omitempty"`         //鑾峰緱鐨勭Н鍒?
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskFinish) Reset() {
	*x = TaskFinish{}
	mi := &file_signin_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskFinish) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskFinish) ProtoMessage() {}

func (x *TaskFinish) ProtoReflect() protoreflect.Message {
	mi := &file_signin_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskFinish.ProtoReflect.Descriptor instead.
func (*TaskFinish) Descriptor() ([]byte, []int) {
	return file_signin_proto_rawDescGZIP(), []int{22}
}

func (x *TaskFinish) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TaskFinish) GetTaskId() int64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *TaskFinish) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *TaskFinish) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *TaskFinish) GetFinishDate() int64 {
	if x != nil {
		return x.FinishDate
	}
	return 0
}

func (x *TaskFinish) GetPoints() int64 {
	if x != nil {
		return x.Points
	}
	return 0
}

type AddTaskFinishReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        int64                  `protobuf:"varint,1,opt,name=taskId,proto3" json:"taskId,omitempty"`         //浠诲姟id
	UserId        int64                  `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`         //userId
	FinishDate    int64                  `protobuf:"varint,3,opt,name=finishDate,proto3" json:"finishDate,omitempty"` //瀹屾垚鏃ユ湡
	Points        int64                  `protobuf:"varint,4,opt,name=points,proto3" json:"points,omitempty"`         //鑾峰緱鐨勭Н鍒?
	Task          []*Task                `protobuf:"bytes,5,rep,name=task,proto3" json:"task,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddTaskFinishReq) Reset() {
	*x = AddTaskFinishReq{}
	mi := &file_signin_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddTaskFinishReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTaskFinishReq) ProtoMessage() {}

func (x *AddTaskFinishReq) ProtoReflect() protoreflect.Message {
	mi := &file_signin_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTaskFinishReq.ProtoReflect.Descriptor instead.
func (*AddTaskFinishReq) Descriptor() ([]byte, []int) {
	return file_signin_proto_rawDescGZIP(), []int{23}
}

func (x *AddTaskFinishReq) GetTaskId() int64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *AddTaskFinishReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AddTaskFinishReq) GetFinishDate() int64 {
	if x != nil {
		return x.FinishDate
	}
	return 0
}

func (x *AddTaskFinishReq) GetPoints() int64 {
	if x != nil {
		return x.Points
	}
	return 0
}

func (x *AddTaskFinishReq) GetTask() []*Task {
	if x != nil {
		return x.Task
	}
	return nil
}

type AddTaskFinishResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Points        int64                  `protobuf:"varint,1,opt,name=points,proto3" json:"points,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddTaskFinishResp) Reset() {
	*x = AddTaskFinishResp{}
	mi := &file_signin_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddTaskFinishResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTaskFinishResp) ProtoMessage() {}

func (x *AddTaskFinishResp) ProtoReflect() protoreflect.Message {
	mi := &file_signin_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTaskFinishResp.ProtoReflect.Descriptor instead.
func (*AddTaskFinishResp) Descriptor() ([]byte, []int) {
	return file_signin_proto_rawDescGZIP(), []int{24}
}

func (x *AddTaskFinishResp) GetPoints() int64 {
	if x != nil {
		return x.Points
	}
	return 0
}

type UpdateTaskFinishReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                 //id
	TaskId        int64                  `protobuf:"varint,2,opt,name=taskId,proto3" json:"taskId,omitempty"`         //浠诲姟id
	UserId        int64                  `protobuf:"varint,3,opt,name=userId,proto3" json:"userId,omitempty"`         //userId
	FinishDate    int64                  `protobuf:"varint,4,opt,name=finishDate,proto3" json:"finishDate,omitempty"` //瀹屾垚鏃ユ湡
	Points        int64                  `protobuf:"varint,5,opt,name=points,proto3" json:"points,omitempty"`         //鑾峰緱鐨勭Н鍒?
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTaskFinishReq) Reset() {
	*x = UpdateTaskFinishReq{}
	mi := &file_signin_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTaskFinishReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTaskFinishReq) ProtoMessage() {}

func (x *UpdateTaskFinishReq) ProtoReflect() protoreflect.Message {
	mi := &file_signin_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTaskFinishReq.ProtoReflect.Descriptor instead.
func (*UpdateTaskFinishReq) Descriptor() ([]byte, []int) {
	return file_signin_proto_rawDescGZIP(), []int{25}
}

func (x *UpdateTaskFinishReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateTaskFinishReq) GetTaskId() int64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *UpdateTaskFinishReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UpdateTaskFinishReq) GetFinishDate() int64 {
	if x != nil {
		return x.FinishDate
	}
	return 0
}

func (x *UpdateTaskFinishReq) GetPoints() int64 {
	if x != nil {
		return x.Points
	}
	return 0
}

type UpdateTaskFinishResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTaskFinishResp) Reset() {
	*x = UpdateTaskFinishResp{}
	mi := &file_signin_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTaskFinishResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTaskFinishResp) ProtoMessage() {}

func (x *UpdateTaskFinishResp) ProtoReflect() protoreflect.Message {
	mi := &file_signin_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTaskFinishResp.ProtoReflect.Descriptor instead.
func (*UpdateTaskFinishResp) Descriptor() ([]byte, []int) {
	return file_signin_proto_rawDescGZIP(), []int{26}
}

type DelTaskFinishReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DelTaskFinishReq) Reset() {
	*x = DelTaskFinishReq{}
	mi := &file_signin_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelTaskFinishReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelTaskFinishReq) ProtoMessage() {}

func (x *DelTaskFinishReq) ProtoReflect() protoreflect.Message {
	mi := &file_signin_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelTaskFinishReq.ProtoReflect.Descriptor instead.
func (*DelTaskFinishReq) Descriptor() ([]byte, []int) {
	return file_signin_proto_rawDescGZIP(), []int{27}
}

func (x *DelTaskFinishReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DelTaskFinishResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DelTaskFinishResp) Reset() {
	*x = DelTaskFinishResp{}
	mi := &file_signin_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelTaskFinishResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelTaskFinishResp) ProtoMessage() {}

func (x *DelTaskFinishResp) ProtoReflect() protoreflect.Message {
	mi := &file_signin_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelTaskFinishResp.ProtoReflect.Descriptor instead.
func (*DelTaskFinishResp) Descriptor() ([]byte, []int) {
	return file_signin_proto_rawDescGZIP(), []int{28}
}

type GetTaskFinishByIdReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTaskFinishByIdReq) Reset() {
	*x = GetTaskFinishByIdReq{}
	mi := &file_signin_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTaskFinishByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskFinishByIdReq) ProtoMessage() {}

func (x *GetTaskFinishByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_signin_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskFinishByIdReq.ProtoReflect.Descriptor instead.
func (*GetTaskFinishByIdReq) Descriptor() ([]byte, []int) {
	return file_signin_proto_rawDescGZIP(), []int{29}
}

func (x *GetTaskFinishByIdReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetTaskFinishByIdResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskFinish    *TaskFinish            `protobuf:"bytes,1,opt,name=taskFinish,proto3" json:"taskFinish,omitempty"` //taskFinish
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTaskFinishByIdResp) Reset() {
	*x = GetTaskFinishByIdResp{}
	mi := &file_signin_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTaskFinishByIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskFinishByIdResp) ProtoMessage() {}

func (x *GetTaskFinishByIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_signin_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskFinishByIdResp.ProtoReflect.Descriptor instead.
func (*GetTaskFinishByIdResp) Descriptor() ([]byte, []int) {
	return file_signin_proto_rawDescGZIP(), []int{30}
}

func (x *GetTaskFinishByIdResp) GetTaskFinish() *TaskFinish {
	if x != nil {
		return x.TaskFinish
	}
	return nil
}

type SearchTaskFinishReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          int64                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`             //page
	Limit         int64                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`           //limit
	Id            int64                  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`                 //id
	TaskId        int64                  `protobuf:"varint,4,opt,name=taskId,proto3" json:"taskId,omitempty"`         //浠诲姟id
	UserId        int64                  `protobuf:"varint,5,opt,name=userId,proto3" json:"userId,omitempty"`         //userId
	CreateTime    int64                  `protobuf:"varint,6,opt,name=createTime,proto3" json:"createTime,omitempty"` //createTime
	FinishDate    int64                  `protobuf:"varint,7,opt,name=finishDate,proto3" json:"finishDate,omitempty"` //瀹屾垚鏃ユ湡
	Points        int64                  `protobuf:"varint,8,opt,name=points,proto3" json:"points,omitempty"`         //鑾峰緱鐨勭Н鍒?
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchTaskFinishReq) Reset() {
	*x = SearchTaskFinishReq{}
	mi := &file_signin_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchTaskFinishReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchTaskFinishReq) ProtoMessage() {}

func (x *SearchTaskFinishReq) ProtoReflect() protoreflect.Message {
	mi := &file_signin_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchTaskFinishReq.ProtoReflect.Descriptor instead.
func (*SearchTaskFinishReq) Descriptor() ([]byte, []int) {
	return file_signin_proto_rawDescGZIP(), []int{31}
}

func (x *SearchTaskFinishReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchTaskFinishReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchTaskFinishReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SearchTaskFinishReq) GetTaskId() int64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *SearchTaskFinishReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SearchTaskFinishReq) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *SearchTaskFinishReq) GetFinishDate() int64 {
	if x != nil {
		return x.FinishDate
	}
	return 0
}

func (x *SearchTaskFinishReq) GetPoints() int64 {
	if x != nil {
		return x.Points
	}
	return 0
}

type SearchTaskFinishResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskFinish    []*TaskFinish          `protobuf:"bytes,1,rep,name=taskFinish,proto3" json:"taskFinish,omitempty"` //taskFinish
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchTaskFinishResp) Reset() {
	*x = SearchTaskFinishResp{}
	mi := &file_signin_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchTaskFinishResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchTaskFinishResp) ProtoMessage() {}

func (x *SearchTaskFinishResp) ProtoReflect() protoreflect.Message {
	mi := &file_signin_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchTaskFinishResp.ProtoReflect.Descriptor instead.
func (*SearchTaskFinishResp) Descriptor() ([]byte, []int) {
	return file_signin_proto_rawDescGZIP(), []int{32}
}

func (x *SearchTaskFinishResp) GetTaskFinish() []*TaskFinish {
	if x != nil {
		return x.TaskFinish
	}
	return nil
}

// --------------------------------remind--------------------------------
type Remind struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                 //id
	UserId        int64                  `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`         //userId
	CreateTime    int64                  `protobuf:"varint,3,opt,name=createTime,proto3" json:"createTime,omitempty"` //createTime
	UpdateTime    int64                  `protobuf:"varint,4,opt,name=updateTime,proto3" json:"updateTime,omitempty"` //updateTime
	Status        int64                  `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`         //0不开启，1开启
	AuthKey       string                 `protobuf:"bytes,6,opt,name=authKey,proto3" json:"authKey,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Remind) Reset() {
	*x = Remind{}
	mi := &file_signin_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Remind) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Remind) ProtoMessage() {}

func (x *Remind) ProtoReflect() protoreflect.Message {
	mi := &file_signin_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Remind.ProtoReflect.Descriptor instead.
func (*Remind) Descriptor() ([]byte, []int) {
	return file_signin_proto_rawDescGZIP(), []int{33}
}

func (x *Remind) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Remind) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Remind) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *Remind) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *Remind) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Remind) GetAuthKey() string {
	if x != nil {
		return x.AuthKey
	}
	return ""
}

type ChangeRemindReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Status        int64                  `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeRemindReq) Reset() {
	*x = ChangeRemindReq{}
	mi := &file_signin_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeRemindReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeRemindReq) ProtoMessage() {}

func (x *ChangeRemindReq) ProtoReflect() protoreflect.Message {
	mi := &file_signin_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeRemindReq.ProtoReflect.Descriptor instead.
func (*ChangeRemindReq) Descriptor() ([]byte, []int) {
	return file_signin_proto_rawDescGZIP(), []int{34}
}

func (x *ChangeRemindReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ChangeRemindReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

type ChangeRemindResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Status        int64                  `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeRemindResp) Reset() {
	*x = ChangeRemindResp{}
	mi := &file_signin_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeRemindResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeRemindResp) ProtoMessage() {}

func (x *ChangeRemindResp) ProtoReflect() protoreflect.Message {
	mi := &file_signin_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeRemindResp.ProtoReflect.Descriptor instead.
func (*ChangeRemindResp) Descriptor() ([]byte, []int) {
	return file_signin_proto_rawDescGZIP(), []int{35}
}

func (x *ChangeRemindResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ChangeRemindResp) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

type GetRemindStatusReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRemindStatusReq) Reset() {
	*x = GetRemindStatusReq{}
	mi := &file_signin_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRemindStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRemindStatusReq) ProtoMessage() {}

func (x *GetRemindStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_signin_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRemindStatusReq.ProtoReflect.Descriptor instead.
func (*GetRemindStatusReq) Descriptor() ([]byte, []int) {
	return file_signin_proto_rawDescGZIP(), []int{36}
}

func (x *GetRemindStatusReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetRemindStatusResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        int64                  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRemindStatusResp) Reset() {
	*x = GetRemindStatusResp{}
	mi := &file_signin_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRemindStatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRemindStatusResp) ProtoMessage() {}

func (x *GetRemindStatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_signin_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRemindStatusResp.ProtoReflect.Descriptor instead.
func (*GetRemindStatusResp) Descriptor() ([]byte, []int) {
	return file_signin_proto_rawDescGZIP(), []int{37}
}

func (x *GetRemindStatusResp) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

type SearchRemindReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`         //id
	UserId        int64                  `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"` //userId
	Status        int64                  `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"` //0不开启，1开启
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchRemindReq) Reset() {
	*x = SearchRemindReq{}
	mi := &file_signin_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchRemindReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRemindReq) ProtoMessage() {}

func (x *SearchRemindReq) ProtoReflect() protoreflect.Message {
	mi := &file_signin_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRemindReq.ProtoReflect.Descriptor instead.
func (*SearchRemindReq) Descriptor() ([]byte, []int) {
	return file_signin_proto_rawDescGZIP(), []int{38}
}

func (x *SearchRemindReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SearchRemindReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SearchRemindReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

type SearchRemindResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Reminds       []*Remind              `protobuf:"bytes,1,rep,name=reminds,proto3" json:"reminds,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchRemindResp) Reset() {
	*x = SearchRemindResp{}
	mi := &file_signin_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchRemindResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRemindResp) ProtoMessage() {}

func (x *SearchRemindResp) ProtoReflect() protoreflect.Message {
	mi := &file_signin_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRemindResp.ProtoReflect.Descriptor instead.
func (*SearchRemindResp) Descriptor() ([]byte, []int) {
	return file_signin_proto_rawDescGZIP(), []int{39}
}

func (x *SearchRemindResp) GetReminds() []*Remind {
	if x != nil {
		return x.Reminds
	}
	return nil
}

var File_signin_proto protoreflect.FileDescriptor

var file_signin_proto_rawDesc = string([]byte{
	0x0a, 0x0c, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02,
	0x70, 0x62, 0x22, 0x6c, 0x0a, 0x06, 0x52, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x44, 0x61, 0x74, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x44, 0x61, 0x74, 0x65,
	0x22, 0x42, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x69, 0x67, 0x6e,
	0x44, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x69, 0x67, 0x6e,
	0x44, 0x61, 0x74, 0x65, 0x22, 0x3d, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x64,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x04, 0x74,
	0x61, 0x73, 0x6b, 0x22, 0x55, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x22, 0x12, 0x0a, 0x10, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x1e,
	0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x0f,
	0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x22, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x79, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x37, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x64, 0x65,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x06, 0x72, 0x65, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65,
	0x63, 0x6f, 0x64, 0x65, 0x52, 0x06, 0x72, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x9f, 0x01, 0x0a,
	0x0f, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x22, 0x4a,
	0x0a, 0x10, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x22, 0x0a, 0x06, 0x72, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x06,
	0x72, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x79, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x64, 0x61, 0x79, 0x73, 0x22, 0xe8, 0x01, 0x0a, 0x04, 0x54,
	0x61, 0x73, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x46, 0x69, 0x6e, 0x69, 0x73,
	0x68, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x69, 0x73, 0x46, 0x69, 0x6e,
	0x69, 0x73, 0x68, 0x65, 0x64, 0x22, 0x7e, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x54, 0x61, 0x73, 0x6b,
	0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x22, 0x0d, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x54, 0x61, 0x73, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x91, 0x01, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x22, 0x10, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x22, 0x1c, 0x0a, 0x0a, 0x44, 0x65,
	0x6c, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x0d, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x22, 0x20, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x54, 0x61,
	0x73, 0x6b, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2f, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x54, 0x61, 0x73, 0x6b, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1c, 0x0a, 0x04,
	0x74, 0x61, 0x73, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x22, 0x93, 0x02, 0x0a, 0x0d, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x2e, 0x0a, 0x0e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x1c, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x04, 0x74, 0x61, 0x73, 0x6b,
	0x22, 0xa4, 0x01, 0x0a, 0x0a, 0x54, 0x61, 0x73, 0x6b, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x44, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x22, 0x98, 0x01, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x54,
	0x61, 0x73, 0x6b, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06,
	0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x61,
	0x73, 0x6b, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x44, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x44, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x04, 0x74, 0x61,
	0x73, 0x6b, 0x22, 0x2b, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x46, 0x69, 0x6e,
	0x69, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x22,
	0x8d, 0x01, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x46, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x69, 0x6e, 0x69, 0x73,
	0x68, 0x44, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x66, 0x69, 0x6e,
	0x69, 0x73, 0x68, 0x44, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x22,
	0x16, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x46, 0x69, 0x6e,
	0x69, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x22, 0x22, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x54, 0x61,
	0x73, 0x6b, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x13, 0x0a, 0x11, 0x44,
	0x65, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x26, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x46, 0x69, 0x6e, 0x69, 0x73,
	0x68, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x47, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x54,
	0x61, 0x73, 0x6b, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x46,
	0x69, 0x6e, 0x69, 0x73, 0x68, 0x52, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x46, 0x69, 0x6e, 0x69, 0x73,
	0x68, 0x22, 0xd7, 0x01, 0x0a, 0x13, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x61, 0x73, 0x6b,
	0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x44, 0x61, 0x74,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x22, 0x46, 0x0a, 0x14, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x61, 0x73, 0x6b, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x46, 0x69, 0x6e, 0x69, 0x73,
	0x68, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x73,
	0x6b, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x52, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x46, 0x69, 0x6e,
	0x69, 0x73, 0x68, 0x22, 0xa2, 0x01, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x75, 0x74, 0x68, 0x4b, 0x65, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x75, 0x74, 0x68, 0x4b, 0x65, 0x79, 0x22, 0x41, 0x0a, 0x0f, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x3a, 0x0a, 0x10, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x2c, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x6d, 0x69, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x2d, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6d, 0x69,
	0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x51, 0x0a, 0x0f, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65,
	0x6d, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x38, 0x0a, 0x10, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x24, 0x0a, 0x07, 0x72,
	0x65, 0x6d, 0x69, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70,
	0x62, 0x2e, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64,
	0x73, 0x32, 0xac, 0x09, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x12, 0x30, 0x0a, 0x09,
	0x41, 0x64, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x41,
	0x64, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70, 0x62,
	0x2e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x38,
	0x0a, 0x11, 0x41, 0x64, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x6f, 0x6c, 0x6c, 0x62,
	0x61, 0x63, 0x6b, 0x12, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x63, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x65,
	0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e,
	0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x30, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x64,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f,
	0x64, 0x65, 0x42, 0x79, 0x49, 0x64, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x70,
	0x62, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x0c, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52,
	0x65, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a,
	0x0a, 0x07, 0x41, 0x64, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x41,
	0x64, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x41,
	0x64, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x33, 0x0a, 0x0a, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x70, 0x62,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x2a, 0x0a, 0x07, 0x44, 0x65, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x0e, 0x2e, 0x70, 0x62, 0x2e,
	0x44, 0x65, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x70, 0x62, 0x2e,
	0x44, 0x65, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x0b, 0x47,
	0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x79, 0x49, 0x64, 0x12, 0x12, 0x2e, 0x70, 0x62, 0x2e,
	0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x13,
	0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x79, 0x49, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x33, 0x0a, 0x0a, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x61, 0x73,
	0x6b, 0x12, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x54,
	0x61, 0x73, 0x6b, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x41,
	0x64, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x52, 0x65, 0x71, 0x1a,
	0x15, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x46, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x44, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x54, 0x61, 0x73,
	0x6b, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x52, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x12,
	0x14, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x46, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x54, 0x61,
	0x73, 0x6b, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x10,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68,
	0x12, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b,
	0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x46, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x54, 0x61, 0x73,
	0x6b, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x70, 0x62, 0x2e,
	0x44, 0x65, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x48, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x46, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x42, 0x79, 0x49, 0x64, 0x12, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x54,
	0x61, 0x73, 0x6b, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x1a, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x46, 0x69, 0x6e,
	0x69, 0x73, 0x68, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x10, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x61, 0x73, 0x6b, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x12,
	0x17, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x61, 0x73, 0x6b, 0x46,
	0x69, 0x6e, 0x69, 0x73, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x54, 0x61, 0x73, 0x6b, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x3d, 0x0a, 0x10, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x69, 0x67, 0x6e,
	0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x12, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x70, 0x62,
	0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x42, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6d,
	0x69, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x70,
	0x62, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x0c, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52,
	0x65, 0x6d, 0x69, 0x6e, 0x64, 0x12, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_signin_proto_rawDescOnce sync.Once
	file_signin_proto_rawDescData []byte
)

func file_signin_proto_rawDescGZIP() []byte {
	file_signin_proto_rawDescOnce.Do(func() {
		file_signin_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_signin_proto_rawDesc), len(file_signin_proto_rawDesc)))
	})
	return file_signin_proto_rawDescData
}

var file_signin_proto_msgTypes = make([]protoimpl.MessageInfo, 40)
var file_signin_proto_goTypes = []any{
	(*Recode)(nil),                // 0: pb.Recode
	(*AddRecodeReq)(nil),          // 1: pb.AddRecodeReq
	(*AddRecodeResp)(nil),         // 2: pb.AddRecodeResp
	(*UpdateRecodeReq)(nil),       // 3: pb.UpdateRecodeReq
	(*UpdateRecodeResp)(nil),      // 4: pb.UpdateRecodeResp
	(*DelRecodeReq)(nil),          // 5: pb.DelRecodeReq
	(*DelRecodeResp)(nil),         // 6: pb.DelRecodeResp
	(*GetRecodeByIdReq)(nil),      // 7: pb.GetRecodeByIdReq
	(*GetRecodeByIdResp)(nil),     // 8: pb.GetRecodeByIdResp
	(*SearchRecodeReq)(nil),       // 9: pb.SearchRecodeReq
	(*SearchRecodeResp)(nil),      // 10: pb.SearchRecodeResp
	(*Task)(nil),                  // 11: pb.Task
	(*AddTaskReq)(nil),            // 12: pb.AddTaskReq
	(*AddTaskResp)(nil),           // 13: pb.AddTaskResp
	(*UpdateTaskReq)(nil),         // 14: pb.UpdateTaskReq
	(*UpdateTaskResp)(nil),        // 15: pb.UpdateTaskResp
	(*DelTaskReq)(nil),            // 16: pb.DelTaskReq
	(*DelTaskResp)(nil),           // 17: pb.DelTaskResp
	(*GetTaskByIdReq)(nil),        // 18: pb.GetTaskByIdReq
	(*GetTaskByIdResp)(nil),       // 19: pb.GetTaskByIdResp
	(*SearchTaskReq)(nil),         // 20: pb.SearchTaskReq
	(*SearchTaskResp)(nil),        // 21: pb.SearchTaskResp
	(*TaskFinish)(nil),            // 22: pb.TaskFinish
	(*AddTaskFinishReq)(nil),      // 23: pb.AddTaskFinishReq
	(*AddTaskFinishResp)(nil),     // 24: pb.AddTaskFinishResp
	(*UpdateTaskFinishReq)(nil),   // 25: pb.UpdateTaskFinishReq
	(*UpdateTaskFinishResp)(nil),  // 26: pb.UpdateTaskFinishResp
	(*DelTaskFinishReq)(nil),      // 27: pb.DelTaskFinishReq
	(*DelTaskFinishResp)(nil),     // 28: pb.DelTaskFinishResp
	(*GetTaskFinishByIdReq)(nil),  // 29: pb.GetTaskFinishByIdReq
	(*GetTaskFinishByIdResp)(nil), // 30: pb.GetTaskFinishByIdResp
	(*SearchTaskFinishReq)(nil),   // 31: pb.SearchTaskFinishReq
	(*SearchTaskFinishResp)(nil),  // 32: pb.SearchTaskFinishResp
	(*Remind)(nil),                // 33: pb.Remind
	(*ChangeRemindReq)(nil),       // 34: pb.ChangeRemindReq
	(*ChangeRemindResp)(nil),      // 35: pb.ChangeRemindResp
	(*GetRemindStatusReq)(nil),    // 36: pb.GetRemindStatusReq
	(*GetRemindStatusResp)(nil),   // 37: pb.GetRemindStatusResp
	(*SearchRemindReq)(nil),       // 38: pb.SearchRemindReq
	(*SearchRemindResp)(nil),      // 39: pb.SearchRemindResp
}
var file_signin_proto_depIdxs = []int32{
	11, // 0: pb.AddRecodeResp.task:type_name -> pb.Task
	0,  // 1: pb.GetRecodeByIdResp.recode:type_name -> pb.Recode
	0,  // 2: pb.SearchRecodeResp.recode:type_name -> pb.Recode
	11, // 3: pb.GetTaskByIdResp.task:type_name -> pb.Task
	11, // 4: pb.SearchTaskResp.task:type_name -> pb.Task
	11, // 5: pb.AddTaskFinishReq.task:type_name -> pb.Task
	22, // 6: pb.GetTaskFinishByIdResp.taskFinish:type_name -> pb.TaskFinish
	22, // 7: pb.SearchTaskFinishResp.taskFinish:type_name -> pb.TaskFinish
	33, // 8: pb.SearchRemindResp.reminds:type_name -> pb.Remind
	1,  // 9: pb.signin.AddRecode:input_type -> pb.AddRecodeReq
	1,  // 10: pb.signin.AddRecodeRollback:input_type -> pb.AddRecodeReq
	3,  // 11: pb.signin.UpdateRecode:input_type -> pb.UpdateRecodeReq
	5,  // 12: pb.signin.DelRecode:input_type -> pb.DelRecodeReq
	7,  // 13: pb.signin.GetRecodeById:input_type -> pb.GetRecodeByIdReq
	9,  // 14: pb.signin.SearchRecode:input_type -> pb.SearchRecodeReq
	12, // 15: pb.signin.AddTask:input_type -> pb.AddTaskReq
	14, // 16: pb.signin.UpdateTask:input_type -> pb.UpdateTaskReq
	16, // 17: pb.signin.DelTask:input_type -> pb.DelTaskReq
	18, // 18: pb.signin.GetTaskById:input_type -> pb.GetTaskByIdReq
	20, // 19: pb.signin.SearchTask:input_type -> pb.SearchTaskReq
	23, // 20: pb.signin.AddTaskFinish:input_type -> pb.AddTaskFinishReq
	23, // 21: pb.signin.AddTaskFinishRollback:input_type -> pb.AddTaskFinishReq
	25, // 22: pb.signin.UpdateTaskFinish:input_type -> pb.UpdateTaskFinishReq
	27, // 23: pb.signin.DelTaskFinish:input_type -> pb.DelTaskFinishReq
	29, // 24: pb.signin.GetTaskFinishById:input_type -> pb.GetTaskFinishByIdReq
	31, // 25: pb.signin.SearchTaskFinish:input_type -> pb.SearchTaskFinishReq
	34, // 26: pb.signin.ChangeSignRemind:input_type -> pb.ChangeRemindReq
	36, // 27: pb.signin.GetRemindStatus:input_type -> pb.GetRemindStatusReq
	38, // 28: pb.signin.SearchRemind:input_type -> pb.SearchRemindReq
	2,  // 29: pb.signin.AddRecode:output_type -> pb.AddRecodeResp
	2,  // 30: pb.signin.AddRecodeRollback:output_type -> pb.AddRecodeResp
	4,  // 31: pb.signin.UpdateRecode:output_type -> pb.UpdateRecodeResp
	6,  // 32: pb.signin.DelRecode:output_type -> pb.DelRecodeResp
	8,  // 33: pb.signin.GetRecodeById:output_type -> pb.GetRecodeByIdResp
	10, // 34: pb.signin.SearchRecode:output_type -> pb.SearchRecodeResp
	13, // 35: pb.signin.AddTask:output_type -> pb.AddTaskResp
	15, // 36: pb.signin.UpdateTask:output_type -> pb.UpdateTaskResp
	17, // 37: pb.signin.DelTask:output_type -> pb.DelTaskResp
	19, // 38: pb.signin.GetTaskById:output_type -> pb.GetTaskByIdResp
	21, // 39: pb.signin.SearchTask:output_type -> pb.SearchTaskResp
	24, // 40: pb.signin.AddTaskFinish:output_type -> pb.AddTaskFinishResp
	24, // 41: pb.signin.AddTaskFinishRollback:output_type -> pb.AddTaskFinishResp
	26, // 42: pb.signin.UpdateTaskFinish:output_type -> pb.UpdateTaskFinishResp
	28, // 43: pb.signin.DelTaskFinish:output_type -> pb.DelTaskFinishResp
	30, // 44: pb.signin.GetTaskFinishById:output_type -> pb.GetTaskFinishByIdResp
	32, // 45: pb.signin.SearchTaskFinish:output_type -> pb.SearchTaskFinishResp
	35, // 46: pb.signin.ChangeSignRemind:output_type -> pb.ChangeRemindResp
	37, // 47: pb.signin.GetRemindStatus:output_type -> pb.GetRemindStatusResp
	39, // 48: pb.signin.SearchRemind:output_type -> pb.SearchRemindResp
	29, // [29:49] is the sub-list for method output_type
	9,  // [9:29] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_signin_proto_init() }
func file_signin_proto_init() {
	if File_signin_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_signin_proto_rawDesc), len(file_signin_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   40,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_signin_proto_goTypes,
		DependencyIndexes: file_signin_proto_depIdxs,
		MessageInfos:      file_signin_proto_msgTypes,
	}.Build()
	File_signin_proto = out.File
	file_signin_proto_goTypes = nil
	file_signin_proto_depIdxs = nil
}
