// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	recode "looklook/app/signin/cmd/api/internal/handler/recode"
	remind "looklook/app/signin/cmd/api/internal/handler/remind"
	task "looklook/app/signin/cmd/api/internal/handler/task"
	"looklook/app/signin/cmd/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				// 测试Validator
				Method:  http.MethodPost,
				Path:    "/lottery/TestValidator",
				Handler: recode.TestValidatorHandler(serverCtx),
			},
			{
				// recode addToday
				Method:  http.MethodPost,
				Path:    "/recode/addToday",
				Handler: recode.AddTodayHandler(serverCtx),
			},
			{
				// recode addToday
				Method:  http.MethodGet,
				Path:    "/recode/list",
				Handler: recode.ListRecodeHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
		rest.WithPrefix("/signin/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				// remind changeSignRemind
				Method:  http.MethodPost,
				Path:    "/remind/change",
				Handler: remind.ChangeSignRemindHandler(serverCtx),
			},
			{
				// remind getRemindStatus
				Method:  http.MethodPost,
				Path:    "/remind/getStatus",
				Handler: remind.GetRemindStatusHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
		rest.WithPrefix("/signin/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				// recode addToday
				Method:  http.MethodGet,
				Path:    "/task/list",
				Handler: task.ListTaskHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
		rest.WithPrefix("/signin/v1"),
	)
}
