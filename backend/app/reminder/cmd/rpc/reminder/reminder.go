// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.6
// Source: reminder.proto

package reminder

import (
	"context"

	"looklook/app/reminder/cmd/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddReminderReq      = pb.AddReminderReq
	AddReminderResp     = pb.AddReminderResp
	DelReminderReq      = pb.DelReminderReq
	DelReminderResp     = pb.DelReminderResp
	GetReminderByIdReq  = pb.GetReminderByIdReq
	GetReminderByIdResp = pb.GetReminderByIdResp
	Reminder            = pb.Reminder
	SearchReminderReq   = pb.SearchReminderReq
	SearchReminderResp  = pb.SearchReminderResp
	UpdateReminderReq   = pb.UpdateReminderReq
	UpdateReminderResp  = pb.UpdateReminderResp

	ReminderZrpcClient interface {
		// -----------------------reminder-----------------------
		AddReminder(ctx context.Context, in *AddReminderReq, opts ...grpc.CallOption) (*AddReminderResp, error)
		UpdateReminder(ctx context.Context, in *UpdateReminderReq, opts ...grpc.CallOption) (*UpdateReminderResp, error)
		DelReminder(ctx context.Context, in *DelReminderReq, opts ...grpc.CallOption) (*DelReminderResp, error)
		GetReminderById(ctx context.Context, in *GetReminderByIdReq, opts ...grpc.CallOption) (*GetReminderByIdResp, error)
		SearchReminder(ctx context.Context, in *SearchReminderReq, opts ...grpc.CallOption) (*SearchReminderResp, error)
	}

	defaultReminderZrpcClient struct {
		cli zrpc.Client
	}
)

func NewReminderZrpcClient(cli zrpc.Client) ReminderZrpcClient {
	return &defaultReminderZrpcClient{
		cli: cli,
	}
}

// -----------------------reminder-----------------------
func (m *defaultReminderZrpcClient) AddReminder(ctx context.Context, in *AddReminderReq, opts ...grpc.CallOption) (*AddReminderResp, error) {
	client := pb.NewReminderClient(m.cli.Conn())
	return client.AddReminder(ctx, in, opts...)
}

func (m *defaultReminderZrpcClient) UpdateReminder(ctx context.Context, in *UpdateReminderReq, opts ...grpc.CallOption) (*UpdateReminderResp, error) {
	client := pb.NewReminderClient(m.cli.Conn())
	return client.UpdateReminder(ctx, in, opts...)
}

func (m *defaultReminderZrpcClient) DelReminder(ctx context.Context, in *DelReminderReq, opts ...grpc.CallOption) (*DelReminderResp, error) {
	client := pb.NewReminderClient(m.cli.Conn())
	return client.DelReminder(ctx, in, opts...)
}

func (m *defaultReminderZrpcClient) GetReminderById(ctx context.Context, in *GetReminderByIdReq, opts ...grpc.CallOption) (*GetReminderByIdResp, error) {
	client := pb.NewReminderClient(m.cli.Conn())
	return client.GetReminderById(ctx, in, opts...)
}

func (m *defaultReminderZrpcClient) SearchReminder(ctx context.Context, in *SearchReminderReq, opts ...grpc.CallOption) (*SearchReminderResp, error) {
	client := pb.NewReminderClient(m.cli.Conn())
	return client.SearchReminder(ctx, in, opts...)
}
