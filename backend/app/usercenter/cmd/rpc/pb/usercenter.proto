syntax = "proto3";

option go_package = "./pb";

package pb;


//model
message User {
  int64 id = 1;
  string mobile = 2;
  string nickname =3;
  int64  sex = 4;
  string avatar = 5;
  string info = 6;
  int64 intimateId = 7;
  string intimateNickname = 8;
  string intimateAvatar = 9;
  int64 points = 10;
}

message UserAuth {
  int64  id = 1;
  int64  userId = 2;
  string authType = 3;
  string authKey = 4;
}

message PointsRecode {
    int64 id = 1;
    int64 userId = 2;
    int64 points = 3;
    string content = 4;
    int64 taskId = 5;
}


//req „ÄÅresp
message RegisterReq {
  string mobile = 1;
  string nickname = 2;
  string password = 3;
  string authKey = 4;
  string authType = 5;
  string avatarURL = 6;
}
message RegisterResp {
  string accessToken = 1;
  int64  accessExpire = 2;
  int64  refreshAfter = 3;
}

message LoginReq {
  string  authType = 1;
  string authKey = 2;
  string  password = 3;
}
message LoginResp {
  string accessToken = 1;
  int64  accessExpire = 2;
  int64  refreshAfter = 3;
}

message GetUserInfoReq {
  int64  id = 1;
}
message GetUserInfoResp {
   User user = 1;
}

message GetUserAuthByAuthKeyReq {
  string  authKey = 1;
  string  authType = 2;
}
message GetUserAuthByAuthKeyResp {
   UserAuth userAuth = 1;
}

message GetUserAuthByUserIdReq {
  int64  userId = 1;
  string  authType = 2;
}
message GetUserAuthyUserIdResp {
   UserAuth userAuth = 1;
}

message GenerateTokenReq {
  int64 userId = 1;
}
message GenerateTokenResp {
  string accessToken = 1;
  int64  accessExpire = 2;
  int64  refreshAfter = 3;
}

message BindIntimateReq {
    int64 userId = 1;
    int64 intimateUserId = 2;
}
message BindIntimateResp {

}

message CancelBindIntimateReq {
    int64 userId = 1;
    int64 intimateUserId = 2;
}
message CancelBindIntimateResp {

}

message ModifyUserInfoReq {
    string avatar = 1;
    string nickname = 2;
    int64 userId = 3;
}
message ModifyUserInfoResp {
}

message AddPointsRecodeReq {
    int64 userId = 1;
    int64 points = 2;
    string content = 3;
    int64 taskId = 4;
}

message AddPointsRecodeResp {
    int64 id = 1;
}

message PointsRecodeListReq {
    int64 userId = 1;
}

message PointRecodeListResp {
    repeated PointsRecode pointsRecode = 1;
}

//service
service usercenter {
  rpc login(LoginReq) returns(LoginResp);
  rpc register(RegisterReq) returns(RegisterResp);
  rpc getUserInfo(GetUserInfoReq) returns(GetUserInfoResp);
  rpc getUserAuthByAuthKey(GetUserAuthByAuthKeyReq) returns(GetUserAuthByAuthKeyResp);
  rpc getUserAuthByUserId(GetUserAuthByUserIdReq) returns(GetUserAuthyUserIdResp);
  rpc generateToken(GenerateTokenReq) returns(GenerateTokenResp);
  rpc BindIntimate(BindIntimateReq) returns (BindIntimateResp);
  rpc CancelBindIntimate(CancelBindIntimateReq) returns (CancelBindIntimateResp);
  rpc ModifyUserInfo(ModifyUserInfoReq) returns (ModifyUserInfoResp);
  rpc AddPointsRecode(AddPointsRecodeReq) returns (AddPointsRecodeResp);
  rpc AddPointsRecodeRollback(AddPointsRecodeReq) returns (AddPointsRecodeResp);
    rpc PointsRecodeList(PointsRecodeListReq) returns (PointRecodeListResp);
}
