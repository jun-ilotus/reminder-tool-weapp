// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	pointsRecode "looklook/app/usercenter/cmd/api/internal/handler/pointsRecode"
	user "looklook/app/usercenter/cmd/api/internal/handler/user"
	"looklook/app/usercenter/cmd/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				// 获取积分记录
				Method:  http.MethodGet,
				Path:    "/pointsRecode/list",
				Handler: pointsRecode.ListHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
		rest.WithPrefix("/usercenter/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				// 小程序注册登录
				Method:  http.MethodPost,
				Path:    "/user/wxMiniAuth",
				Handler: user.WxMiniAuthHandler(serverCtx),
			},
		},
		rest.WithPrefix("/usercenter/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				// 绑定亲密好友
				Method:  http.MethodPost,
				Path:    "/user/bindIntimate",
				Handler: user.BindIntimateHandler(serverCtx),
			},
			{
				// 取消绑定亲密好友
				Method:  http.MethodPost,
				Path:    "/user/cancelBindIntimate",
				Handler: user.CancelbindIntimateHandler(serverCtx),
			},
			{
				// 获得用户数据
				Method:  http.MethodPost,
				Path:    "/user/detail",
				Handler: user.DetailHandler(serverCtx),
			},
			{
				// 修改用户信息
				Method:  http.MethodPost,
				Path:    "/user/modifyInfo",
				Handler: user.ModifyInfoHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
		rest.WithPrefix("/usercenter/v1"),
	)
}
